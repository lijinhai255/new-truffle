/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RedPacket, RedPacketInterface } from "../RedPacket";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "redPacketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RedPacketClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "redPacketId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalCount",
        type: "uint256",
      },
    ],
    name: "RedPacketCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "redPacketId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "remainCount",
        type: "uint256",
      },
    ],
    name: "RedPacketUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "redPacketCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "redPackets",
    outputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remainAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remainCount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_totalCount",
        type: "uint256",
      },
    ],
    name: "createRedPacket",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "redPacketId",
        type: "uint256",
      },
    ],
    name: "claimRedPacket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ae9806100206000396000f3fe60806040526004361061005c576000357c0100000000000000000000000000000000000000000000000000000000900480630c1c76b414610061578063128aa2541461008c5780636656432e146100ce5780638d4b67a6146100f7575b600080fd5b34801561006d57600080fd5b50610076610127565b60405161008391906105f6565b60405180910390f35b34801561009857600080fd5b506100b360048036038101906100ae9190610642565b61012d565b6040516100c5969594939291906106cb565b60405180910390f35b3480156100da57600080fd5b506100f560048036038101906100f09190610642565b610196565b005b610111600480360381019061010c9190610642565b6103f5565b60405161011e91906105f6565b60405180910390f35b60015481565b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b600080600083815260200190815260200160002090508060050160009054906101000a900460ff166101fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f490610789565b60405180910390fd5b6000816004015411610244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023b906107f5565b60405180910390fd5b600081600201541161028b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028290610861565b60405180910390fd5b6000816004015482600201546102a191906108df565b905060018260040154036102b757816002015490505b808260020160008282546102cb9190610910565b9250508190555060018260040160008282546102e79190610910565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610334573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff16837f35d644614009c0a33ec77a511c3b74a5eb804fc664529a6c778562dd6b87fade8360405161037c91906105f6565b60405180910390a3827fa5c981ee41044bb92ac9e7e2d2e6af07b2b9df6e165dae354648115280c16409836002015484600401546040516103be929190610944565b60405180910390a260008260040154036103f05760008260050160006101000a81548160ff0219169083151502179055505b505050565b6000803411610439576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610430906109b9565b60405180910390fd5b6000821161047c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047390610a4b565b60405180910390fd5b6001600081548092919061048f90610a6b565b91905055506040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200134815260200134815260200183815260200183815260200160011515815250600080600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff166001547f680e257dda79cd07165570434d5cd2ff8221d3f4d092abfc2a09a555440e93ee34856040516105cb929190610944565b60405180910390a36001549050919050565b6000819050919050565b6105f0816105dd565b82525050565b600060208201905061060b60008301846105e7565b92915050565b600080fd5b61061f816105dd565b811461062a57600080fd5b50565b60008135905061063c81610616565b92915050565b60006020828403121561065857610657610611565b5b60006106668482850161062d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061069a8261066f565b9050919050565b6106aa8161068f565b82525050565b60008115159050919050565b6106c5816106b0565b82525050565b600060c0820190506106e060008301896106a1565b6106ed60208301886105e7565b6106fa60408301876105e7565b61070760608301866105e7565b61071460808301856105e7565b61072160a08301846106bc565b979650505050505050565b600082825260208201905092915050565b7f526564207061636b6574206973206e6f74206163746976650000000000000000600082015250565b600061077360188361072c565b915061077e8261073d565b602082019050919050565b600060208201905081810360008301526107a281610766565b9050919050565b7f4e6f20726564207061636b657473206c65667400000000000000000000000000600082015250565b60006107df60138361072c565b91506107ea826107a9565b602082019050919050565b6000602082019050818103600083015261080e816107d2565b9050919050565b7f4e6f20616d6f756e74206c656674000000000000000000000000000000000000600082015250565b600061084b600e8361072c565b915061085682610815565b602082019050919050565b6000602082019050818103600083015261087a8161083e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108ea826105dd565b91506108f5836105dd565b92508261090557610904610881565b5b828204905092915050565b600061091b826105dd565b9150610926836105dd565b925082820390508181111561093e5761093d6108b0565b5b92915050565b600060408201905061095960008301856105e7565b61096660208301846105e7565b9392505050565b7f4e6f204554482073656e742e0000000000000000000000000000000000000000600082015250565b60006109a3600c8361072c565b91506109ae8261096d565b602082019050919050565b600060208201905081810360008301526109d281610996565b9050919050565b7f546f74616c20636f756e74206d7573742062652067726561746572207468616e60008201527f207a65726f2e0000000000000000000000000000000000000000000000000000602082015250565b6000610a3560268361072c565b9150610a40826109d9565b604082019050919050565b60006020820190508181036000830152610a6481610a28565b9050919050565b6000610a76826105dd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610aa857610aa76108b0565b5b60018201905091905056fea264697066735822122076f36c7c1d4404d4b3d4efe695ca1f22de2d6faada3524d7c01a82faf4691d5c64736f6c63430008140033";

type RedPacketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RedPacketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RedPacket__factory extends ContractFactory {
  constructor(...args: RedPacketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<RedPacket> {
    return super.deploy(overrides || {}) as Promise<RedPacket>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RedPacket {
    return super.attach(address) as RedPacket;
  }
  override connect(signer: Signer): RedPacket__factory {
    return super.connect(signer) as RedPacket__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedPacketInterface {
    return new utils.Interface(_abi) as RedPacketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RedPacket {
    return new Contract(address, _abi, signerOrProvider) as RedPacket;
  }
}

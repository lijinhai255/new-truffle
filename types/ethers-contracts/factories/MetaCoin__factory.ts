/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MetaCoin, MetaCoinInterface } from "../MetaCoin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "SYMBOL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600f81526020017f57454241494552433230546f6b656e00000000000000000000000000000000008152506040518060400160405280600581526020017f574542414900000000000000000000000000000000000000000000000000000081525081600390816200008f91906200060e565b508060049081620000a191906200060e565b505050620000c233620186a0620000c8640100000000026401000000009004565b6200082c565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200013d5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200013491906200073a565b60405180910390fd5b6200015a600083836200015e640100000000026401000000009004565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001b4578060026000828254620001a7919062000786565b925050819055506200028a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000243578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200023a93929190620007d2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002d5578060026000828254039250508190555062000322565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200038191906200080f565b60405180910390a3505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200041057607f821691505b602082108103620004265762000425620003c8565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b60008160020a8302905092915050565b600060088302620004937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000451565b6200049f868362000451565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620004ec620004e6620004e084620004b7565b620004c1565b620004b7565b9050919050565b6000819050919050565b6200050883620004cb565b620005206200051782620004f3565b84845462000461565b825550505050565b600090565b6200053762000528565b62000544818484620004fd565b505050565b5b818110156200056c57620005606000826200052d565b6001810190506200054a565b5050565b601f821115620005bb5762000585816200042c565b620005908462000441565b81016020851015620005a0578190505b620005b8620005af8562000441565b83018262000549565b50505b505050565b60008160020a8304905092915050565b6000620005e360001984600802620005c0565b1980831691505092915050565b6000620005fe8383620005d0565b9150826002028217905092915050565b62000619826200038e565b67ffffffffffffffff81111562000635576200063462000399565b5b620006418254620003f7565b6200064e82828562000570565b600060209050601f83116001811462000686576000841562000671578287015190505b6200067d8582620005f0565b865550620006ed565b601f19841662000696866200042c565b60005b82811015620006c05784890151825560018201915060208501945060208101905062000699565b86831015620006e05784890151620006dc601f891682620005d0565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200072282620006f5565b9050919050565b620007348162000715565b82525050565b600060208201905062000751600083018462000729565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200079382620004b7565b9150620007a083620004b7565b9250828201905080821115620007bb57620007ba62000757565b5b92915050565b620007cc81620004b7565b82525050565b6000606082019050620007e9600083018662000729565b620007f86020830185620007c1565b620008076040830184620007c1565b949350505050565b6000602082019050620008266000830184620007c1565b92915050565b610f62806200083c6000396000f3fe608060405234801561001057600080fd5b50600436106100d1576000357c01000000000000000000000000000000000000000000000000000000009004806370a082311161008e57806370a08231146101ae57806395d89b41146101de578063a3f4df7e146101fc578063a9059cbb1461021a578063dd62ed3e1461024a578063f76f8d781461027a576100d1565b806306fdde03146100d6578063095ea7b3146100f457806318160ddd1461012457806323b872dd146101425780632ff2e9dc14610172578063313ce56714610190575b600080fd5b6100de610298565b6040516100eb9190610bb6565b60405180910390f35b61010e60048036038101906101099190610c71565b61032a565b60405161011b9190610ccc565b60405180910390f35b61012c61034d565b6040516101399190610cf6565b60405180910390f35b61015c60048036038101906101579190610d11565b610357565b6040516101699190610ccc565b60405180910390f35b61017a610386565b6040516101879190610cf6565b60405180910390f35b61019861038d565b6040516101a59190610d80565b60405180910390f35b6101c860048036038101906101c39190610d9b565b610392565b6040516101d59190610cf6565b60405180910390f35b6101e66103da565b6040516101f39190610bb6565b60405180910390f35b61020461046c565b6040516102119190610bb6565b60405180910390f35b610234600480360381019061022f9190610c71565b6104a5565b6040516102419190610ccc565b60405180910390f35b610264600480360381019061025f9190610dc8565b6104c8565b6040516102719190610cf6565b60405180910390f35b61028261054f565b60405161028f9190610bb6565b60405180910390f35b6060600380546102a790610e37565b80601f01602080910402602001604051908101604052809291908181526020018280546102d390610e37565b80156103205780601f106102f557610100808354040283529160200191610320565b820191906000526020600020905b81548152906001019060200180831161030357829003601f168201915b5050505050905090565b600080610335610588565b9050610342818585610590565b600191505092915050565b6000600254905090565b600080610362610588565b905061036f8582856105a2565b61037a858585610636565b60019150509392505050565b620186a081565b600090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103e990610e37565b80601f016020809104026020016040519081016040528092919081815260200182805461041590610e37565b80156104625780601f1061043757610100808354040283529160200191610462565b820191906000526020600020905b81548152906001019060200180831161044557829003601f168201915b5050505050905090565b6040518060400160405280600f81526020017f57454241494552433230546f6b656e000000000000000000000000000000000081525081565b6000806104b0610588565b90506104bd818585610636565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040518060400160405280600581526020017f574542414900000000000000000000000000000000000000000000000000000081525081565b600033905090565b61059d838383600161072a565b505050565b60006105ae84846104c8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106305781811015610620578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161061793929190610e77565b60405180910390fd5b61062f8484848403600061072a565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106a85760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161069f9190610eae565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361071a5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107119190610eae565b60405180910390fd5b610725838383610901565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361079c5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107939190610eae565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361080e5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108059190610eae565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156108fb578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108f29190610cf6565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109535780600260008282546109479190610ef8565b92505081905550610a26565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109df578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016109d693929190610e77565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a6f5780600260008282540392505081905550610abc565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b199190610cf6565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b60578082015181840152602081019050610b45565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b8882610b26565b610b928185610b31565b9350610ba2818560208601610b42565b610bab81610b6c565b840191505092915050565b60006020820190508181036000830152610bd08184610b7d565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c0882610bdd565b9050919050565b610c1881610bfd565b8114610c2357600080fd5b50565b600081359050610c3581610c0f565b92915050565b6000819050919050565b610c4e81610c3b565b8114610c5957600080fd5b50565b600081359050610c6b81610c45565b92915050565b60008060408385031215610c8857610c87610bd8565b5b6000610c9685828601610c26565b9250506020610ca785828601610c5c565b9150509250929050565b60008115159050919050565b610cc681610cb1565b82525050565b6000602082019050610ce16000830184610cbd565b92915050565b610cf081610c3b565b82525050565b6000602082019050610d0b6000830184610ce7565b92915050565b600080600060608486031215610d2a57610d29610bd8565b5b6000610d3886828701610c26565b9350506020610d4986828701610c26565b9250506040610d5a86828701610c5c565b9150509250925092565b600060ff82169050919050565b610d7a81610d64565b82525050565b6000602082019050610d956000830184610d71565b92915050565b600060208284031215610db157610db0610bd8565b5b6000610dbf84828501610c26565b91505092915050565b60008060408385031215610ddf57610dde610bd8565b5b6000610ded85828601610c26565b9250506020610dfe85828601610c26565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e4f57607f821691505b602082108103610e6257610e61610e08565b5b50919050565b610e7181610bfd565b82525050565b6000606082019050610e8c6000830186610e68565b610e996020830185610ce7565b610ea66040830184610ce7565b949350505050565b6000602082019050610ec36000830184610e68565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f0382610c3b565b9150610f0e83610c3b565b9250828201905080821115610f2657610f25610ec9565b5b9291505056fea264697066735822122072cf3bcc5dd757f97ecb1511143acc47d11ac1aa5bd8064cc350bc2eb507e94664736f6c63430008140033";

type MetaCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MetaCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MetaCoin__factory extends ContractFactory {
  constructor(...args: MetaCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<MetaCoin> {
    return super.deploy(overrides || {}) as Promise<MetaCoin>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MetaCoin {
    return super.attach(address) as MetaCoin;
  }
  override connect(signer: Signer): MetaCoin__factory {
    return super.connect(signer) as MetaCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaCoinInterface {
    return new utils.Interface(_abi) as MetaCoinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaCoin {
    return new Contract(address, _abi, signerOrProvider) as MetaCoin;
  }
}

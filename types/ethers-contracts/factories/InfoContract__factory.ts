/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { InfoContract, InfoContractInterface } from "../InfoContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "updater",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "scolller",
        type: "string",
      },
    ],
    name: "InfoUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_scolller",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
    ],
    name: "setInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getInfo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061084a806100206000396000f3fe608060405234801561001057600080fd5b5060043610610053576000357c0100000000000000000000000000000000000000000000000000000000900480635a9b0b8914610058578063b9e2b54414610078575b600080fd5b610060610094565b60405161006f939291906102eb565b60405180910390f35b610092600480360381019061008d91906104a5565b6101c4565b005b606060006060600060025460018280546100ad9061055f565b80601f01602080910402602001604051908101604052809291908181526020018280546100d99061055f565b80156101265780601f106100fb57610100808354040283529160200191610126565b820191906000526020600020905b81548152906001019060200180831161010957829003601f168201915b505050505092508080546101399061055f565b80601f01602080910402602001604051908101604052809291908181526020018280546101659061055f565b80156101b25780601f10610187576101008083540402835291602001916101b2565b820191906000526020600020905b81548152906001019060200180831161019557829003601f168201915b50505050509050925092509250909192565b82600090816101d39190610742565b5081600190816101e39190610742565b50806002819055503373ffffffffffffffffffffffffffffffffffffffff167f3e73b29dc900271ac6914169affae8949694397a8c75bc3d93072159a22537af848385604051610235939291906102eb565b60405180910390a2505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561027c578082015181840152602081019050610261565b60008484015250505050565b6000601f19601f8301169050919050565b60006102a482610242565b6102ae818561024d565b93506102be81856020860161025e565b6102c781610288565b840191505092915050565b6000819050919050565b6102e5816102d2565b82525050565b600060608201905081810360008301526103058186610299565b905061031460208301856102dc565b81810360408301526103268184610299565b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61038682610288565b810181811067ffffffffffffffff821117156103a5576103a461034e565b5b80604052505050565b60006103b8610330565b90506103c4828261037d565b919050565b600067ffffffffffffffff8211156103e4576103e361034e565b5b6103ed82610288565b9050602081019050919050565b82818337600083830152505050565b600061041c610417846103c9565b6103ae565b90508281526020810184848401111561043857610437610349565b5b6104438482856103fa565b509392505050565b600082601f8301126104605761045f610344565b5b8135610470848260208601610409565b91505092915050565b610482816102d2565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000806000606084860312156104be576104bd61033a565b5b600084013567ffffffffffffffff8111156104dc576104db61033f565b5b6104e88682870161044b565b935050602084013567ffffffffffffffff8111156105095761050861033f565b5b6105158682870161044b565b925050604061052686828701610490565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061057757607f821691505b60208210810361058a57610589610530565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b60008160020a8302905092915050565b6000600883026105f57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105b5565b6105ff86836105b5565b95508019841693508086168417925050509392505050565b6000819050919050565b600061063c610637610632846102d2565b610617565b6102d2565b9050919050565b6000819050919050565b61065683610621565b61066a61066282610643565b8484546105c5565b825550505050565b600090565b61067f610672565b61068a81848461064d565b505050565b5b818110156106ae576106a3600082610677565b600181019050610690565b5050565b601f8211156106f3576106c481610590565b6106cd846105a5565b810160208510156106dc578190505b6106f06106e8856105a5565b83018261068f565b50505b505050565b60008160020a8304905092915050565b6000610719600019846008026106f8565b1980831691505092915050565b60006107328383610708565b9150826002028217905092915050565b61074b82610242565b67ffffffffffffffff8111156107645761076361034e565b5b61076e825461055f565b6107798282856106b2565b600060209050601f8311600181146107ac576000841561079a578287015190505b6107a48582610726565b86555061080c565b601f1984166107ba86610590565b60005b828110156107e2578489015182556001820191506020850194506020810190506107bd565b868310156107ff57848901516107fb601f891682610708565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220047ac5459b5694b4fc7fe36df00b997c27cf029c623bffce8db86d5408a23a9464736f6c63430008140033";

type InfoContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InfoContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InfoContract__factory extends ContractFactory {
  constructor(...args: InfoContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<InfoContract> {
    return super.deploy(overrides || {}) as Promise<InfoContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InfoContract {
    return super.attach(address) as InfoContract;
  }
  override connect(signer: Signer): InfoContract__factory {
    return super.connect(signer) as InfoContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InfoContractInterface {
    return new utils.Interface(_abi) as InfoContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InfoContract {
    return new Contract(address, _abi, signerOrProvider) as InfoContract;
  }
}
